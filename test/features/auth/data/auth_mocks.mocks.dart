// Mocks generated by Mockito 5.4.5 from annotations
// in book_mart/test/features/auth/data/auth_mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:book_mart/core/netwoking/api_result.dart' as _i3;
import 'package:book_mart/features/auth/data/models/forget_password_model/reset_password_request_body.dart'
    as _i8;
import 'package:book_mart/features/auth/data/models/login_model/login_request_body.dart'
    as _i6;
import 'package:book_mart/features/auth/data/models/login_model/user_data_response.dart'
    as _i2;
import 'package:book_mart/features/auth/data/models/sign_up_model/sign_up_request_body.dart'
    as _i7;
import 'package:book_mart/features/auth/data/networking/auth_api_service.dart'
    as _i4;
import 'package:book_mart/features/auth/data/repo/auth_repo.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserDataResponse_0 extends _i1.SmartFake
    implements _i2.UserDataResponse {
  _FakeUserDataResponse_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeApiResult_1<T> extends _i1.SmartFake implements _i3.ApiResult<T> {
  _FakeApiResult_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AuthApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthApiService extends _i1.Mock implements _i4.AuthApiService {
  MockAuthApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.UserDataResponse> login(
    _i6.LoginRequestBody? loginRequestBody,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#login, [loginRequestBody]),
            returnValue: _i5.Future<_i2.UserDataResponse>.value(
              _FakeUserDataResponse_0(
                this,
                Invocation.method(#login, [loginRequestBody]),
              ),
            ),
          )
          as _i5.Future<_i2.UserDataResponse>);

  @override
  _i5.Future<_i2.UserDataResponse> signUp(
    _i7.SignupRequestBody? signupRequestBody,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#signUp, [signupRequestBody]),
            returnValue: _i5.Future<_i2.UserDataResponse>.value(
              _FakeUserDataResponse_0(
                this,
                Invocation.method(#signUp, [signupRequestBody]),
              ),
            ),
          )
          as _i5.Future<_i2.UserDataResponse>);

  @override
  _i5.Future<void> sendOtp(Map<String, String>? email) =>
      (super.noSuchMethod(
            Invocation.method(#sendOtp, [email]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> checkOtp(Map<String, String>? otp) =>
      (super.noSuchMethod(
            Invocation.method(#checkOtp, [otp]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> resetPassword(
    _i8.ResetPasswordRequestBody? resetPasswordRequestBody,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#resetPassword, [resetPasswordRequestBody]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);
}

/// A class which mocks [AuthRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepo extends _i1.Mock implements _i9.AuthRepo {
  MockAuthRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i3.ApiResult<_i2.UserDataResponse>> login(
    _i6.LoginRequestBody? loginRequestBody,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#login, [loginRequestBody]),
            returnValue: _i5.Future<_i3.ApiResult<_i2.UserDataResponse>>.value(
              _FakeApiResult_1<_i2.UserDataResponse>(
                this,
                Invocation.method(#login, [loginRequestBody]),
              ),
            ),
          )
          as _i5.Future<_i3.ApiResult<_i2.UserDataResponse>>);

  @override
  _i5.Future<_i3.ApiResult<_i2.UserDataResponse>> signup(
    _i7.SignupRequestBody? signupRequestBody,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#signup, [signupRequestBody]),
            returnValue: _i5.Future<_i3.ApiResult<_i2.UserDataResponse>>.value(
              _FakeApiResult_1<_i2.UserDataResponse>(
                this,
                Invocation.method(#signup, [signupRequestBody]),
              ),
            ),
          )
          as _i5.Future<_i3.ApiResult<_i2.UserDataResponse>>);

  @override
  _i5.Future<_i3.ApiResult<bool>> sendOTP(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#sendOTP, [email]),
            returnValue: _i5.Future<_i3.ApiResult<bool>>.value(
              _FakeApiResult_1<bool>(
                this,
                Invocation.method(#sendOTP, [email]),
              ),
            ),
          )
          as _i5.Future<_i3.ApiResult<bool>>);

  @override
  _i5.Future<_i3.ApiResult<bool>> checkOtp(String? otp) =>
      (super.noSuchMethod(
            Invocation.method(#checkOtp, [otp]),
            returnValue: _i5.Future<_i3.ApiResult<bool>>.value(
              _FakeApiResult_1<bool>(this, Invocation.method(#checkOtp, [otp])),
            ),
          )
          as _i5.Future<_i3.ApiResult<bool>>);

  @override
  _i5.Future<_i3.ApiResult<bool>> resetPassword(
    _i8.ResetPasswordRequestBody? resetPasswordRequestBody,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#resetPassword, [resetPasswordRequestBody]),
            returnValue: _i5.Future<_i3.ApiResult<bool>>.value(
              _FakeApiResult_1<bool>(
                this,
                Invocation.method(#resetPassword, [resetPasswordRequestBody]),
              ),
            ),
          )
          as _i5.Future<_i3.ApiResult<bool>>);
}
